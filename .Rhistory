setwd("C:/Users/fisix/Desktop/NYC Data Science/projects/bird_map")
USA = read_rds('./data/GADM.rds')
library(raster)
library(leaflet)
library(tidyverse)
library(raster)
library(leaflet)
library(tidyverse)
USA = read_rds('./data/GADM.rds')
american_bittern = read.csv('./data/american_bittern.csv', stringsAsFactors = FALSE)
american_bittern$COUNTY_NAME = gsub("^(.*?),.*", "\\1", american_bittern$location)
american_bittern = american_bittern %>%
group_by(COUNTY_NAME) %>%
summarise(obs = n())
mydata <- data.frame(COUNTY_NAME = setdiff(USA$NAME_2, american_bittern$COUNTY_NAME),
obs = NA,
stringsAsFactors = FALSE) %>%
bind_rows(american_bittern)
### Create a color palette
mypal <- colorNumeric(palette = "viridis", domain = mydata$obs)
leaflet() %>%
addPolygons(data = USA, stroke = FALSE, smoothFactor = 0.2, fillOpacity = 0.3,
fillColor = ~mypal(mydata$obs)) %>%
addLegend(position = "bottomleft", pal = mypal, values = mydata$obs,
title = "Avg_yield",
opacity = 1)
american_bittern$COUNTY_NAME = gsub("^(.*?),.*", "\\1", american_bittern$location)
american_bittern = read.csv('./data/american_bittern.csv', stringsAsFactors = FALSE)
american_bittern$COUNTY_NAME = gsub("^(.*?),.*", "\\1", american_bittern$location)
american_bittern = american_bittern %>%
group_by(COUNTY_NAME) %>%
summarise(obs = n())
### Create a color palette
mypal <- colorNumeric(palette = "viridis", domain = mydata$obs)
leaflet() %>%
addPolygons(data = USA, stroke = FALSE, smoothFactor = 0.2, fillOpacity = 0.3,
fillColor = ~mypal(mydata$obs)) %>%
addLegend(position = "bottomleft", pal = mypal, values = mydata$obs,
title = "Avg_yield",
opacity = 1)
map('state', lwd=1, add=TRUE)
library(maps)
mydata.final <- data.frame(county = (map('county', plot = FALSE)$names),
stringsAsFactors = F)
### My numeric variable:
set.seed(123)
mydata.final$Mean.Wait <- runif(nrow(mydata.final)) * 10
### Introducing NAs to mimic my real data set:
set.seed(1234)
mydata.final$Mean.Wait[sample(1:nrow(mydata.final), 1500)] <- NA
### Cutting the original numeric variable into categories
### because I don't know how to color based on 'Mean.Wait':
mydata.final$wait <- cut(mydata.final$Mean.Wait, breaks = 5)
levels(mydata.final$wait) <- 1:5
mydata.final$wait <- as.numeric(as.character(mydata.final$wait))
######################################################################
### Building a US map based on 'wait' (5 categories)
######################################################################
### Creating my 5 colors:
pal <- colorRampPalette(c("yellow", "red"))
allcolors <- pal(5)
### Looking at my 5 colors:
barplot(1:5, rep(1,5), col = allcolors, horiz = T)
### Builiding the US map using 5 categories in 'wait':
map('county', fill = TRUE, col = allcolors[mydata.final$wait],
resolution = 0, lty = 0, bg = "transparent")
map('state', lwd=1, add=TRUE)
View(mydata.final)
mydata.final <- data.frame(county = (map('county', plot = FALSE)$names),
stringsAsFactors = F)
mydata.final <- data.frame(county = (map('county', plot = TRUE)$names),
stringsAsFactors = F)
mydata.final <- data.frame(county = (map('county', plot = F)$names),
stringsAsFactors = F)
View(mydata.final)
View(mydata.final)
mydata.final <- data.frame(county = (map('county', plot = F)$names),
stringsAsFactors = F)
View(mydata.final)
mydata.final <- data.frame(county = (map('county', plot = F)$names),
stringsAsFactors = F)
View(mydata.final)
rm(mydata.final)
library(maps)
mydata.final <- data.frame(county = (map('county', plot = F)$names),
stringsAsFactors = F)
View(mydata.final)
View(mydata.final)
head(mydata.final)
newpal <- colorRamp(c("yellow", "red"))
missing <- is.na(mydata.final$Mean.Wait)
newcol <- ifelse(missing, "white",
rgb(newpal(mydata.final$Mean.Wait[!is.na(mydata.final$Mean.Wait)]/
max(mydata.final$Mean.Wait,
na.rm=T)), maxColorValue=255))
map('county', fill=TRUE, col=newcol,
resolution=0, lty=0, bg="transparent")
map('state', lwd=1, add=TRUE)
map('county', fill=TRUE, col=newcol,
resolution=0, lty=0, bg="transparent")
mydata.final <- data.frame(county = (map('county', plot = F)$names),
stringsAsFactors = F)
head(mydata.final)
### My numeric variable:
set.seed(123)
mydata.final$Mean.Wait <- runif(nrow(mydata.final)) * 10
### Introducing NAs to mimic my real data set:
set.seed(1234)
mydata.final$Mean.Wait[sample(1:nrow(mydata.final), 1500)] <- NA
### Cutting the original numeric variable into categories
### because I don't know how to color based on 'Mean.Wait':
mydata.final$wait <- cut(mydata.final$Mean.Wait, breaks = 5)
levels(mydata.final$wait) <- 1:5
mydata.final$wait <- as.numeric(as.character(mydata.final$wait))
### Creating my 5 colors:
pal <- colorRampPalette(c("yellow", "red"))
allcolors <- pal(5)
### Looking at my 5 colors:
barplot(1:5, rep(1,5), col = allcolors, horiz = T)
### Builiding the US map using 5 categories in 'wait':
map('county', fill = TRUE, col = allcolors[mydata.final$wait],
resolution = 0, lty = 0, bg = "transparent")
map('state', lwd=1, add=TRUE)
newpal <- colorRamp(c("yellow", "red"))
missing <- is.na(mydata.final$Mean.Wait)
newcol <- ifelse(missing, "white",
rgb(newpal(mydata.final$Mean.Wait[!is.na(mydata.final$Mean.Wait)]/
max(mydata.final$Mean.Wait,
na.rm=T)), maxColorValue=255))
map('county', fill=TRUE, col=newcol,
resolution=0, lty=0, bg="transparent")
map('state', lwd=1, add=TRUE)
newpal <- colorRamp(c("yellow", "red"))
missing <- is.na(mydata.final$Mean.Wait)
newcol <- ifelse(missing, "yellow",
rgb(newpal(mydata.final$Mean.Wait[!is.na(mydata.final$Mean.Wait)]/
max(mydata.final$Mean.Wait,
na.rm=T)), maxColorValue=255))
map('county', fill=TRUE, col=newcol,
resolution=0, lty=0, bg="transparent")
map('state', lwd=1, add=TRUE)
newpal <- colorRamp(c("white", "blue"))
missing <- is.na(mydata.final$Mean.Wait)
newcol <- ifelse(missing, "white",
rgb(newpal(mydata.final$Mean.Wait[!is.na(mydata.final$Mean.Wait)]/
max(mydata.final$Mean.Wait,
na.rm=T)), maxColorValue=255))
map('county', fill=TRUE, col=newcol,
resolution=0, lty=0, bg="transparent")
map('state', lwd=1, add=TRUE)
install.packages("plotrix")
library(plotrix)
newcol<-color.scale(mydata.final$Mean.Wait,extremes=c("white","blue"),na.color="white")
map('county', fill=TRUE, col=newcol,
resolution=0, lty=0, bg="transparent")
map('state', lwd=1, add=TRUE)
### Looking at my 5 colors:
barplot(1:5, rep(1,5), col = allcolors, horiz = T)
map('county', fill=TRUE, col=newcol,
resolution=0, lty=0, bg="transparent")
map('state', lwd=1, add=TRUE)
map('county', fill=TRUE, col=newcol,
resolution=0, lty=0, bg="transparent")
### Looking at my 5 colors:
barplot(1:5, rep(1,5), col = allcolors, horiz = T)
map('county', fill=TRUE, col=newcol,
resolution=0, lty=0, bg="transparent")
map('state', lwd=1, add=TRUE)
df <- read.csv("https://raw.githubusercontent.com/bcdunbar/datasets/master/votes.csv")
View(df)
View(mydata.final)
View(mydata)
